--
-- PostgreSQL database dump
--

-- Dumped from database version 9.6.3
-- Dumped by pg_dump version 9.6.3

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: ar_internal_metadata; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE ar_internal_metadata (
    key character varying NOT NULL,
    value character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE ar_internal_metadata OWNER TO postgres;

--
-- Name: concerts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE concerts (
    id integer NOT NULL,
    name character varying,
    venue character varying,
    concertdate date,
    conductor character varying,
    accompanist character varying,
    theme text,
    notes text,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    concert_year integer
);


ALTER TABLE concerts OWNER TO postgres;

--
-- Name: concerts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE concerts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE concerts_id_seq OWNER TO postgres;

--
-- Name: concerts_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE concerts_id_seq OWNED BY concerts.id;


--
-- Name: concerts_singers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE concerts_singers (
    concert_id integer NOT NULL,
    singer_id integer NOT NULL
);


ALTER TABLE concerts_singers OWNER TO postgres;

--
-- Name: concerts_songs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE concerts_songs (
    concert_id integer NOT NULL,
    song_id integer NOT NULL
);


ALTER TABLE concerts_songs OWNER TO postgres;

--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE schema_migrations (
    version character varying NOT NULL
);


ALTER TABLE schema_migrations OWNER TO postgres;

--
-- Name: singers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE singers (
    id integer NOT NULL,
    "lastName" character varying,
    "firstName" character varying,
    email character varying,
    voice character varying,
    joined date,
    "left" date,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    join_year integer,
    left_year integer
);


ALTER TABLE singers OWNER TO postgres;

--
-- Name: singers_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE singers_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE singers_id_seq OWNER TO postgres;

--
-- Name: singers_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE singers_id_seq OWNED BY singers.id;


--
-- Name: singers_songs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE singers_songs (
    singer_id integer NOT NULL,
    song_id integer NOT NULL
);


ALTER TABLE singers_songs OWNER TO postgres;

--
-- Name: songs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE songs (
    id integer NOT NULL,
    name character varying,
    source character varying,
    composer character varying,
    lyricist character varying,
    genre character varying,
    "songType" character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE songs OWNER TO postgres;

--
-- Name: songs_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE songs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE songs_id_seq OWNER TO postgres;

--
-- Name: songs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE songs_id_seq OWNED BY songs.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE users (
    id integer NOT NULL,
    email character varying DEFAULT ''::character varying NOT NULL,
    encrypted_password character varying DEFAULT ''::character varying NOT NULL,
    reset_password_token character varying,
    reset_password_sent_at timestamp without time zone,
    remember_created_at timestamp without time zone,
    sign_in_count integer DEFAULT 0 NOT NULL,
    current_sign_in_at timestamp without time zone,
    last_sign_in_at timestamp without time zone,
    current_sign_in_ip inet,
    last_sign_in_ip inet,
    confirmation_token character varying,
    confirmed_at timestamp without time zone,
    confirmation_sent_at timestamp without time zone,
    unconfirmed_email character varying,
    failed_attempts integer DEFAULT 0 NOT NULL,
    unlock_token character varying,
    locked_at timestamp without time zone,
    name character varying,
    member boolean,
    admin boolean,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE users OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE users_id_seq OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: concerts id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY concerts ALTER COLUMN id SET DEFAULT nextval('concerts_id_seq'::regclass);


--
-- Name: singers id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY singers ALTER COLUMN id SET DEFAULT nextval('singers_id_seq'::regclass);


--
-- Name: songs id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY songs ALTER COLUMN id SET DEFAULT nextval('songs_id_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Data for Name: ar_internal_metadata; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY ar_internal_metadata (key, value, created_at, updated_at) FROM stdin;
environment	development	2017-05-28 03:32:27.112049	2017-05-28 03:32:27.112049
\.


--
-- Data for Name: concerts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY concerts (id, name, venue, concertdate, conductor, accompanist, theme, notes, created_at, updated_at, concert_year) FROM stdin;
1	Songs of Peace and Love	New Rochelle Library	2017-05-21	Jena Smith	Mariana Salzman			2017-05-28 03:46:23.062985	2017-06-22 18:49:43.900728	2017
2	6 Degrees of Separation	New Jersey	2017-06-23	Jena Smith	Mariana Salzman			2017-06-23 00:17:08.564308	2017-06-23 00:17:08.564308	2011
3	The French Twist	New Rochelle Library	2006-05-06	Jena Smith	Mariana Salzman	A witty dedication (and expose) of French Culture tongue and cheek through music and narration		2017-06-28 17:26:45.699454	2017-06-28 17:29:18.878299	2006
\.


--
-- Name: concerts_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('concerts_id_seq', 3, true);


--
-- Data for Name: concerts_singers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY concerts_singers (concert_id, singer_id) FROM stdin;
1	2
1	1
2	5
2	6
2	7
2	8
2	9
2	10
2	11
2	12
2	1
1	5
1	6
1	8
1	9
1	12
1	4
1	3
1	15
3	13
3	7
3	8
3	9
3	10
3	12
3	20
3	1
3	25
3	26
3	27
3	30
3	31
3	32
3	33
3	34
3	35
\.


--
-- Data for Name: concerts_songs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY concerts_songs (concert_id, song_id) FROM stdin;
1	1
1	2
2	7
2	6
2	3
2	4
2	8
2	5
2	10
2	11
2	9
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY schema_migrations (version) FROM stdin;
20170528032747
20170528140100
20170528140334
20170528140845
20170528214148
20170528220836
20170622182707
20170622184536
20170623181523
20170627233348
\.


--
-- Data for Name: singers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY singers (id, "lastName", "firstName", email, voice, joined, "left", created_at, updated_at, join_year, left_year) FROM stdin;
1	Lindow	Eric	elindow@verizon.net	Tenor	2012-05-28	2017-05-28	2017-05-28 14:16:13.219735	2017-06-22 18:37:04.631189	1993	\N
2	Green	Lauren		Soprano	2016-09-01	2017-05-21	2017-05-28 14:28:50.170457	2017-06-22 18:38:50.057556	2016	2017
9	Ehresmann	Pat	Cinnderella@msn.com	Alto	\N	\N	2017-06-22 21:51:32.195534	2017-06-22 21:51:32.195534	\N	\N
8	Dyckman	Jan	jrdyckman@netscape.net	Tenor	\N	\N	2017-06-22 21:51:07.247732	2017-06-22 21:52:32.146656	\N	\N
12	Harris	Louise	Anlyan@aol.com	Soprano	\N	\N	2017-06-22 21:53:41.516355	2017-06-22 21:53:41.516355	\N	\N
5	Antonio	E.J.	Latlantis25@hotmail.com	Alto	\N	\N	2017-06-22 21:46:03.783399	2017-06-22 21:53:55.847197	\N	\N
6	Ballen	Karen	kballen@liebertpub.com	Soprano	\N	\N	2017-06-22 21:48:36.580995	2017-06-22 21:54:10.764973	\N	\N
7	Bornstein	Renee	ReneeBornstein@optonline.net	Alto	\N	\N	2017-06-22 21:50:19.874192	2017-06-22 21:54:23.830041	\N	\N
10	Giges	Ilka	Ilkagee@hotmail.com	Soprano	\N	\N	2017-06-22 21:52:14.816117	2017-06-22 21:54:35.984561	\N	\N
11	Grochowski	Wanda	WGrochiowski@somers.k12.ny.usa	Alto	\N	\N	2017-06-22 21:53:17.312856	2017-06-22 21:54:46.932064	\N	\N
3	Smith	Jena	JenaCarole@aol.com	Conductor	\N	\N	2017-06-22 21:44:10.807268	2017-06-23 17:39:33.701123	1988	\N
4	Salzman	Marianna	Yuriart1@yahoo.com	Accompanist	\N	\N	2017-06-22 21:45:22.585124	2017-06-23 17:55:06.022646	\N	\N
13	Albert	Evelyn		Soprano	\N	\N	2017-06-28 17:07:05.313523	2017-06-28 17:07:05.313523	\N	\N
14	Cheskin	Joel		Bass	\N	\N	2017-06-28 17:07:32.656295	2017-06-28 17:07:32.656295	\N	\N
15	Diones	George		Tenor	\N	\N	2017-06-28 17:08:01.008223	2017-06-28 17:08:01.008223	\N	\N
18	Goldman	Millicent			\N	\N	2017-06-28 17:09:09.671944	2017-06-28 17:09:09.671944	\N	\N
19	Hettman	Brenda			\N	\N	2017-06-28 17:09:31.961139	2017-06-28 17:09:31.961139	\N	\N
21	Leibowitz	Gillian			\N	\N	2017-06-28 17:10:05.689491	2017-06-28 17:10:05.689491	\N	\N
22	Lucas	Vicki			\N	\N	2017-06-28 17:10:23.123876	2017-06-28 17:10:23.123876	\N	\N
25	Mohr	Eugene		Bass	\N	\N	2017-06-28 17:11:20.787547	2017-06-28 17:11:20.787547	\N	\N
29	Weinberg	Howard		Bass	\N	\N	2017-06-28 17:12:46.255071	2017-06-28 17:12:46.255071	\N	\N
16	Geller	Mimi	Mmewisic@aol.com	Soprano	\N	\N	2017-06-28 17:08:32.465925	2017-06-28 17:13:56.997305	\N	\N
17	Gelman	Yoram	YGelman@worldnet.att.net		\N	\N	2017-06-28 17:08:53.533484	2017-06-28 17:14:28.560192	\N	\N
20	Kingley	Emily	EPKingsley@aol.com	Alto	\N	\N	2017-06-28 17:09:48.320829	2017-06-28 17:15:00.584413	\N	\N
23	Matilaine	John	jmatilaine@aol.com	Bass	\N	\N	2017-06-28 17:10:48.33317	2017-06-28 17:15:39.771518	\N	\N
24	Miernik	Marlene	ypstrustees@compuserve.com	Alto	\N	\N	2017-06-28 17:11:05.1407	2017-06-28 17:16:04.36281	\N	\N
26	Oshodi	Adekunle	Adekunle41@aol.com	Tenor	\N	\N	2017-06-28 17:11:48.650698	2017-06-28 17:16:29.106999	\N	\N
27	Rozner	Judy	brozner@aol.com	Soprano	\N	\N	2017-06-28 17:12:00.337636	2017-06-28 17:16:45.56673	\N	\N
28	Salchow	Bill	wsalchow@computer.net	Bass	\N	\N	2017-06-28 17:12:30.261187	2017-06-28 17:17:08.9061	\N	\N
30	Werner	Lucy	103643.3522@compuserve.com	Alto	\N	\N	2017-06-28 17:13:11.831244	2017-06-28 17:17:44.935168	\N	\N
31	Barry	Jane		Soprano	\N	\N	2017-06-28 17:29:44.289537	2017-06-28 17:29:44.289537	\N	\N
32	Fruchtman	Meredith			\N	\N	2017-06-28 17:30:05.153675	2017-06-28 17:30:05.153675	\N	\N
33	Jackson	Audley		Bass	\N	\N	2017-06-28 17:30:25.270875	2017-06-28 17:30:25.270875	\N	\N
34	Mallette	Janice			\N	\N	2017-06-28 17:30:46.606192	2017-06-28 17:30:46.606192	\N	\N
35	Sarna	John		Bass	\N	\N	2017-06-28 17:31:14.550134	2017-06-28 17:31:14.550134	\N	\N
\.


--
-- Name: singers_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('singers_id_seq', 35, true);


--
-- Data for Name: singers_songs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY singers_songs (singer_id, song_id) FROM stdin;
1	1
1	8
2	1
\.


--
-- Data for Name: songs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY songs (id, name, source, composer, lyricist, genre, "songType", created_at, updated_at) FROM stdin;
1	Garden Scene	Faust	Gounod		Opera	Scene	2017-05-28 14:14:09.911605	2017-06-23 00:09:08.448534
4	Lost In the Stars	Cry the Beloved Country			Broadway	Solo	2017-06-23 00:03:53.501248	2017-06-23 00:09:25.65961
3	In That Great Gettin' Up Mornin'				Spiritual	Choral	2017-06-23 00:00:58.901373	2017-06-23 00:09:42.025408
2	Donna Nobis Pacem					Round	2017-05-28 23:35:48.612912	2017-06-23 00:09:51.520287
5	Sit Down You're Rockin' the Boat	Guys and Dolls	Loesser		Broadway	Solo with Chorus	2017-06-23 00:11:00.314541	2017-06-23 00:11:00.314541
6	Come to the Fair				Folk	Chorus	2017-06-23 00:11:25.271325	2017-06-23 00:11:25.271325
7	Canon	Pach	Pachelbel		Classical	Choral	2017-06-23 00:12:22.089753	2017-06-23 00:12:22.089753
8	My Heart At Thy Sweet Voice	Samson and Delilah	Saint-Saens		Opera	Duet	2017-06-23 00:13:29.85304	2017-06-23 00:13:29.85304
9	The Minstrel Boy				Folk	Solo with Celtic Harp	2017-06-23 03:44:29.78507	2017-06-23 03:44:29.78507
10	Johnny I Hardly Knew Ye					Solo with Chorus	2017-06-23 03:44:59.760907	2017-06-23 03:44:59.760907
11	Let's Call the Whole Thing Off				Film	Solo with Chorus	2017-06-23 03:45:34.827631	2017-06-23 03:45:34.827631
\.


--
-- Name: songs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('songs_id_seq', 11, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY users (id, email, encrypted_password, reset_password_token, reset_password_sent_at, remember_created_at, sign_in_count, current_sign_in_at, last_sign_in_at, current_sign_in_ip, last_sign_in_ip, confirmation_token, confirmed_at, confirmation_sent_at, unconfirmed_email, failed_attempts, unlock_token, locked_at, name, member, admin, created_at, updated_at) FROM stdin;
1	elindow@verizon.net	$2a$11$7SMvbTrQyeZ1geX8T0rfOOxvw0ZuKyivgsittGHW5fS116pt.p2da	\N	\N	\N	2	2017-06-28 16:58:30.521792	2017-06-28 16:53:57.197145	127.0.0.1	127.0.0.1	sx47ywcfsVhSfhZ58ez2	2017-06-28 16:53:20.104892	2017-06-28 16:24:46.550349	\N	0	\N	\N	Eric Lindow	t	t	2017-06-28 16:24:46.550349	2017-06-28 16:58:30.523815
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('users_id_seq', 1, true);


--
-- Name: ar_internal_metadata ar_internal_metadata_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY ar_internal_metadata
    ADD CONSTRAINT ar_internal_metadata_pkey PRIMARY KEY (key);


--
-- Name: concerts concerts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY concerts
    ADD CONSTRAINT concerts_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations schema_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: singers singers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY singers
    ADD CONSTRAINT singers_pkey PRIMARY KEY (id);


--
-- Name: songs songs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY songs
    ADD CONSTRAINT songs_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: index_users_on_email; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX index_users_on_email ON users USING btree (email);


--
-- Name: index_users_on_reset_password_token; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX index_users_on_reset_password_token ON users USING btree (reset_password_token);


--
-- PostgreSQL database dump complete
--

